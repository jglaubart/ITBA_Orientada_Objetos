Se desea modelar un sistema que administre el acceso de pasajeros a los salones VIP de un aeropuerto.

Los pasajeros cuentan con una cantidad limitada de pases para acceder a los salones, donde con cada acceso se utiliza uno de los pases.
La clase Passenger modela a un pasajero a partir de su nombre (String), la aerolínea en la que vuela (String) y la cantidad de pases que tiene (int).

Ya cuenta con una clase LoungeCentral (que no puede modificarse) que modela a la central de todos los salones y
que cuenta con métodos para abrir y cerrar los salones, ambos implementados a partir de un campo que puede consultarse con el método isOpen.

Los salones deben contar con métodos para permitir el ingreso y el egreso de pasajeros a los mismos.
Para el ingreso al salón se debe contar con un método enter que recibe la instancia de Passenger.
Para el egreso del salón no interesa cuál fue el pasajero que egresó y se deben contar con dos métodos:
            uno que contemple el egreso de un pasajero y otro que contemple el egreso de N pasajeros donde N se recibe por parámetro.

Existen además tres tipos de salones:
    Un salón que permite el ingreso de pasajeros de todas las aerolíneas que cuenten con al menos un pase
    Un salón que permite el ingreso de hasta M pasajeros de todas las aerolíneas que cuenten con al menos un pase, donde M se indica por parámetro
    Un salón que permite el ingreso de hasta M pasajeros de una aerolínea X que cuenten con al menos un pase, donde M y X se indican por parámetro
Para todos los salones el ingreso de un pasajero debe fallar si el salón está cerrado (en función de los métodos de la central).


Completar los .............................., implementar Passenger y todo lo necesario para que, con el siguiente programa de prueba, se obtenga la salida indicada en los comentarios: